# -*- indent-tabs-mode: nil; -*-
#
# This tox configuration is mainly meant for running inside a Docker container,
# based on tests/docker/Dockerfile

[tox]
envlist = {unit,integration,functional}-py{37,38}-django22, javascript, docs
skipsdist = True
basepython = python3.7

[tox:jenkins]
toxworkdir = /source/.tox

[pytest]
addopts = --failed-first
markers =
    twisted: marks tests as needing twisted async to run

[gh-actions]
python =
    3.7: py37
    3.8: py38

[testenv]
# Baseline test environment
deps =
    pip-tools
    pip<21.3
setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
    PYTHONPATH = {toxinidir}/tests
    BUILDDIR = {envdir}
    CHROME_BIN = /usr/bin/google-chrome
    DJANGO_SETTINGS_MODULE = nav.django.settings
    PYTHONFAULTHANDLER=1
    django22: DJANGO_VER=22
    django31: DJANGO_VER=31
    django32: DJANGO_VER=32
passenv = GITHUB_ACTIONS GITHUB_RUN_ID USER PGHOST PGPORT PGDATABASE PGUSER PGPASSWORD WORKSPACE DISPLAY
allowlist_externals =
                      sh
                      sed
                      mkdir
commands_pre =
         pip-compile --output-file {envdir}/requirements.txt tests/requirements.txt requirements/base.txt requirements/optional.txt requirements/django{env:DJANGO_VER}.txt
         pip-sync {envdir}/requirements.txt
         pip install -e .

commands =
         unit: pytest -o junit_suite_name="{envname} unit tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --junitxml=reports/{envname}/unit-results.xml --verbose {posargs:tests/unittests}

         {integration,functional}: python setup.py build_sass

         integration: python -m nav.django.manage check
         {integration,functional}: nav config install {envdir}/etc
         {integration,functional}: mkdir -p {envdir}/uploads
         {integration,functional}: sed -i 's,^#\?UPLOAD_DIR.*.,UPLOAD_DIR={envdir}/uploads,' {envdir}/etc/nav.conf
         integration: sed -i 's/^#DJANGO_DEBUG.*/DJANGO_DEBUG=True/' {envdir}/etc/nav.conf
         integration: sed -i 's/^NAV_USER.*/NAV_USER={env:USER}/' {envdir}/etc/nav.conf
         integration: sed -i 's,^#base.*,base=http://localhost:9000,' {envdir}/etc/graphite.conf
         integration: django-admin collectstatic --noinput
         integration: pytest -o junit_suite_name="{envname} integration tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --html reports/{envname}/integration-report.html --junitxml=reports/{envname}/integration-results.xml --verbose --showlocals {posargs:tests/integration}

         functional: sed -i 's/^nav.*=.*INFO/root=DEBUG/' {envdir}/etc/logging.conf
         functional: /sbin/start-stop-daemon -o --stop --quiet --pidfile /var/tmp/xvfb.pid
         functional: /sbin/start-stop-daemon --start --quiet --pidfile /var/tmp/xvfb.pid --make-pidfile --background --exec /usr/bin/Xvfb -- {env:DISPLAY} -screen 0 1024x768x24 -fbdir /var/tmp -ac
         functional: django-admin collectstatic --noinput
         functional: pytest -o junit_suite_name="{envname} functional tests" --junitxml=reports/{envname}/functional-results.xml --verbose --driver Chrome --driver-path=/usr/local/bin/chromedriver --sensitive-url "nothing to see here" --html reports/{envname}/functional-report.html {posargs:tests/functional}
         functional: /sbin/start-stop-daemon --stop --quiet --pidfile /var/tmp/xvfb.pid


[testenv:javascript]
usedevelop=True
deps = libsass==0.15.1
commands_pre =
commands =
         /sbin/start-stop-daemon -o --stop --quiet --pidfile /var/tmp/xvfb.pid
         /sbin/start-stop-daemon --start --quiet --pidfile /var/tmp/xvfb.pid --make-pidfile --background --exec /usr/bin/Xvfb -- {env:DISPLAY} -screen 0 1024x768x24 -fbdir /var/tmp -ac
         {toxinidir}/tests/javascript-test.sh "{toxinidir}"
         /sbin/start-stop-daemon --stop --quiet --pidfile /var/tmp/xvfb.pid

[testenv:pylint]
deps = pip-tools
description = PyLint run on default environment
setenv =
       PYLINTHOME = {toxinidir}
       LC_ALL=C.UTF-8
       LANG=C.UTF-8
commands_pre =
         pip-compile --output-file {envdir}/requirements.txt tests/requirements.txt requirements/base.txt requirements/django22.txt
         pip-sync {envdir}/requirements.txt
commands =
         {toxinidir}/tests/docker/scripts/pylint.sh python/nav --jobs=4 --rcfile=python/pylint.rc --disable=I,similarities --load-plugins pylint_django --output-format=parseable

[testenv:docs]
description = Just build the Sphinx documentation
deps = pip-tools
setenv =
    PYTHONPATH = {toxinidir}/python:{toxinidir}/tests
    DJANGO_SETTINGS_MODULE = nav.django.settings
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
allowlist_externals = sh
commands_pre =
         pip-compile --output-file {envdir}/requirements.txt doc/requirements.txt
         pip-sync {envdir}/requirements.txt
commands =
         python setup.py build_sphinx
         sh -c "cd doc; python -c 'import conf; print(conf.version)' > {toxinidir}/reports/doc_version"

# -*- indent-tabs-mode: nil; -*-
#
# This tox configuration is mainly meant for running inside a Docker container,
# based on tests/docker/Dockerfile

# When changing the python or django version also change it in the tox example
# of the documentation in hacking.rst
[tox]
envlist =
    {unit,integration,functional}-py{39,310,311,312}-django{42}
    {unit,integration,functional}-py{310,311,312,313}-django{52}
    javascript
    docs
basepython = python3.9

[pytest]
addopts = --failed-first
markers =
    twisted: marks tests as needing twisted async to run

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
# Baseline test environment
deps =
    pip
    -r tests/requirements.txt
    -r requirements/base.txt
    -r requirements/optional.txt
    -r requirements/django{env:DJANGO_VER}.txt
    -c constraints.txt

setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
    PYTHONPATH = {toxinidir}/tests
    VIRTUALENV_PIP=23.1.0
    BUILDDIR = {envdir}
    CHROME_BIN = /usr/bin/google-chrome
    DJANGO_SETTINGS_MODULE = nav.django.settings
    COVERAGE_FILE = {toxinidir}/reports/coverage/.coverage
    PYTHONFAULTHANDLER=1
    DJANGO_VER=42
    django42: DJANGO_VER=42
    django50: DJANGO_VER=50
    django51: DJANGO_VER=51
    django52: DJANGO_VER=52
passenv =
    C_INCLUDE_PATH
    CHROMEWEBDRIVER
    GITHUB_ACTIONS
    GITHUB_RUN_ID
    USER
    PGHOST
    PGPORT
    PGDATABASE
    PGUSER
    PGPASSWORD
    WORKSPACE
    DISPLAY
    DYLD_LIBRARY_PATH
    LD_LIBRARY_PATH
allowlist_externals =
                      sh
                      sed
                      mkdir
                      chmod
                      make

package = editable
commands_pre =
         mkdir -p {toxinidir}/reports/coverage
         chmod 777 {toxinidir}/reports/coverage

commands =
         unit: pytest -o junit_suite_name="{envname} unit tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --junitxml=reports/{envname}/unit-results.xml --verbose {posargs:tests/unittests}

         {integration,functional}: make sassbuild

         integration: python -m nav.django.manage check
         {integration,functional}: nav config install {envdir}/etc
         {integration,functional}: mkdir -p {envdir}/uploads
         {integration,functional}: sed -i 's,^\#\?UPLOAD_DIR.*.,UPLOAD_DIR={envdir}/uploads,' {envdir}/etc/nav.conf
         integration: sed -i 's/^\#DJANGO_DEBUG.*/DJANGO_DEBUG=True/' {envdir}/etc/nav.conf
         integration: sed -i 's/^NAV_USER.*/NAV_USER={env:USER}/' {envdir}/etc/nav.conf
         integration: sed -i 's,^\#base.*,base=http://localhost:9000,' {envdir}/etc/graphite.conf
         integration: django-admin collectstatic --noinput
         integration: pytest -o junit_suite_name="{envname} integration tests" --cov-config {toxinidir}/tests/.coveragerc --cov={toxinidir}/python --cov-report=xml:reports/{envname}/coverage.xml --html reports/{envname}/integration-report.html --junitxml=reports/{envname}/integration-results.xml --verbose --showlocals {posargs:tests/integration}

         functional: sed -i 's/^nav.*=.*INFO/root=DEBUG/' {envdir}/etc/logging.conf
         functional: django-admin collectstatic --noinput
         functional: pytest -o junit_suite_name="{envname} functional tests" --junitxml=reports/{envname}/functional-results.xml --verbose --driver Chrome --driver-path={env:CHROMEWEBDRIVER:/usr/local/bin}/chromedriver --sensitive-url "nothing to see here" --html reports/{envname}/functional-report.html {posargs:tests/functional}


[testenv:javascript]
setenv =
         OPENSSL_CONF=/dev/null
usedevelop=True
allowlist_externals = xvfb-run
commands_pre =
deps =
commands =
         xvfb-run {toxinidir}/tests/javascript-test.sh "{toxinidir}"

[testenv:docs]
description = Just build the Sphinx documentation
deps =
    -r doc/requirements.txt

usedevelop = true
setenv =
    PYTHONPATH = {toxinidir}/python:{toxinidir}/tests
    DJANGO_SETTINGS_MODULE = nav.django.settings
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
    VIRTUALENV_PIP=23.1.0
allowlist_externals = sh
commands_pre =
commands =
         sphinx-build doc/ doc/_build/
         sh -c "cd doc; python -c 'import conf; print(conf.version)' > {toxinidir}/reports/doc_version"
